#页面不加载缓存，修改即时生效
# 上传文件总的最大值
spring.servlet.multipart.max-request-size=10MB
# 单个文件的最大值
spring.servlet.multipart.max-file-size=10MB

### jsp
#spring.mvc.view.prefix=/webapp/
#spring.mvc.view.suffix=.jsp

spring.devtools.remote.restart.enabled=true
spring.devtools.restart.additional-paths=src/main/java
spring.devtools.restart.exclude=WEB-INF/**
spring.freemarker.cache=false


#============== kafka ===================
# 指定kafka 代理地址，可以多个
spring.kafka.bootstrap-servers=10.1.105.217:9092

#=============== provider  =======================

spring.kafka.producer.retries=0
# 每次批量发送消息的数量
spring.kafka.producer.batch-size=16384
spring.kafka.producer.buffer-memory=33554432

# 指定消息key和消息体的编解码方式
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
# 指定默认消费者group id
spring.kafka.consumer.group-id=test-hello-group

spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval.ms=60*1000

# 指定消息key和消息体的编解码方式
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer








#============== kafka ===================
# 指定kafka 代理地址，可以多个
#spring.kafka.producer.bootstrap-servers=10.1.105.217:9092,10.1.105.217:9093,10.1.105.217:9094
#spring.kafka.consumer.bootstrap-servers=10.1.105.217:9092,10.1.105.217:9093,10.1.105.217:9094
#spring.kafka.bootstrap.servers=10.1.105.217:9092,10.1.105.217:9093,10.1.105.217:9094
#kafka.topic1=ces
#=============== provider  =======================
#
#如果该值大于零时，表示启用重试失败的发送次数
#spring.kafka.producer.retries=0
# 每次批量发送消息的数量
#spring.kafka.producer.batch-size=16384
#spring.kafka.producer.buffer-memory=33554432
# 指定消息key和消息体的编解码方式
#spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

#=============== consumer  =======================
#spring.kafka.allow.auto.create.topics=false
# 指定默认消费者group id
#spring.kafka.consumer.group-id=test-consumer-group

#spring.kafka.consumer.auto-offset-reset=earliest
#spring.kafka.consumer.enable-auto-commit=false
#自动提交offset到zookeeper的时间间隔
#spring.kafka.consumer.auto-commit-interval.ms=60*1000

# 指定消息key和消息体的编解码方式
#spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
#spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

